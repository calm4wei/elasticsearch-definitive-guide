[[pagination]]
=== 分页

在之前的 <<empty-search,empty search>> 中知道集群中有14个文档匹配了我们（empty）query。但是在 `hits` 数组中只有10个文档，怎么样我们才能看到其他的文档呢？ 

像SQL使用 `LIMIT` 关键字返回单页的结果一样，Elasticsearch 有((("from parameter")))((("size parameter"))) `from` 和 `size` 参数：

`size`:: 
   显示应该返回的结果数量，默认是 `10`
   
`from`:: 
   显示应该跳过的初始结果数量，默认是 `0`

如果想每页展示五条结果，可以用下面三种方式请求：

[source,js]
--------------------------------------------------
GET /_search?size=5
GET /_search?size=5&from=5
GET /_search?size=5&from=10
--------------------------------------------------
// SENSE: 050_Search/15_Pagination.json


考虑到分页太深或者请求太多结果的情况，在返回结果之前可以对结果排序。但是请记住一个请求经常跨越多个分片，每个分片都产生自己的排序结果，这些结果需要进行集中排序以保证全部的次序是正确的。

.在分布式系统中深度分页
****

理解为什么((("deep paging, problems with")))深度分页是有问题的，我们可以设想在一个有5个分片的索引中搜索。当我们请求结果的第一页（结果从1到10），每一个分片产生前10的结果，并且返回给起协调作用的节点，起协调作用的节点在对50个结果排序得到全部结果的前10个。

现在想象我们请求第1000页--结果从10001到10010。所有都以相同的方式工作除了每个分片不得不产生前10010个结果以外。然后起协调作用的节点对全部50050个结果排序最后丢弃掉这些结果中的50040个结果。

看得出来，在分布式系统中，对结果排序的成本随分页的深度成指数上升。这就是为什么每次查询不要返回超过1000个结果的一个好理由。

****

TIP: 在 <<reindex>> 中我们解释了如何有效的获取大量的文档。
